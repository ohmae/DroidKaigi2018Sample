apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.ben-manes.versions'

def applicationName = "DroidKaigi2018Sample"
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "net.mm2d.droidkaigi2018sample"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix = ".debug"
            versionNameSuffix = "d"
            manifestPlaceholders = [app_name: "D:DroidKaigi2018Sample"]
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [app_name: "@string/app_name"]
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name != "release") {
            return
        }
        variant.outputs.all {
            outputFileName = "${applicationName}-${versionName}.apk"
        }
    }
}

repositories {
    maven {
        url 'https://ohmae.github.com/maven'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation "net.mm2d:log:0.8.0"
    implementation "net.mm2d:log-android:0.8.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    testImplementation "junit:junit:4.12"
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
